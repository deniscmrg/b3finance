import os
import sys
import django
import pandas as pd
from decimal import Decimal

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'backend.settings')
django.setup()

from cotacoes.models import Cotacao, Acao

def wilder_moving_average(series, period):
    return series.ewm(alpha=1/period, adjust=False).mean()

def analisar_potencial_reversao():
    resultados = []

    for acao in Acao.objects.all():
        cotacoes = Cotacao.objects.filter(acao=acao).order_by('-data')[:90]

        if cotacoes.count() < 60:
            continue

        df = pd.DataFrame.from_records(
            cotacoes.values('data', 'fechamento', 'wma602', 'wma17', 'wma34', 'volume')
        ).sort_values('data')

        atual = df.iloc[-1]

        if not atual['wma602'] or atual['fechamento'] >= atual['wma602']:
            continue  # não está abaixo da wma600

        # Sinal 1: tendência de alta nos últimos 3 dias
        ultimos_fech = df['fechamento'].iloc[-3:]
        subindo = ultimos_fech.is_monotonic_increasing

        # Sinal 2: wma17 > wma34 ou wma17 > fechamento
        cruzamento = atual['wma17'] > atual['wma34'] or atual['wma17'] > atual['fechamento']

        # Sinal 3: volume acima da média (opcional)
        volume_medio = df['volume'].mean()
        volume_ok = atual['volume'] > volume_medio

        score = int(subindo) + int(cruzamento) + int(volume_ok)

        if score > 0:
            resultados.append({
                'ticker': acao.ticker,
                'fechamento': float(atual['fechamento']),
                'wma602': float(atual['wma602']),
                'score': score,
            })

    df_resultado = pd.DataFrame(resultados)
    df_resultado = df_resultado.sort_values(['score', 'ticker'], ascending=[False, True]).head(20)

    print(df_resultado.to_string(index=False))
    return df_resultado

if __name__ == '__main__':
    df = analisar_potencial_reversao()
    df.to_csv('relatorio_reversao.csv', index=False)
